# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: 
  push:
    branches-ignore:
      - 'main'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Access the repo
        uses: actions/checkout@v2 
    
      - name: Configure Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3' 
          
      - name: Install necessary libraries
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Execute Python Script
        run: python run.py

      - name: commit changes
        run: |
          # Stage the file, commit and push
          git config --global user.name 'seafoamy'
          git config --global user.email 'seafoamy@myyahoo.com'
          git commit -am "github action commit"
          git push origin ${GITHUB_REF##*/}

  testJob:
    needs: build
    name: Get feature metrics
    runs-on: ubuntu-latest

    outputs:
      output1: ${{fromJson(steps.set_var.outputs.feature_data).Accuracy}}
    steps:
      - name: Access the repo
        uses: actions/checkout@v2 

      - id: set_var
        run: |
          content=`cat data.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=feature_data::$content"

  mainMetrics:
    needs: testJob
    name: Get main metrics
    runs-on: ubuntu-latest
    steps:
      - name: Access the repo
        uses: actions/checkout@v3
        with:
          ref: main 

      - id: set_var
        run: |
          content=`cat data.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=feature_data::$content"

      #if: ${{needs.testJob.outputs.output1}} < ${{fromJson(steps.set_var.outputs.feature_data).Accuracy}}
      - name: Access the repo
        uses: actions/checkout@v3
        with:
          ref: feature
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
          commit-message: this was done automatically
          title: Git action auto update
          body: Fix our changes
          branch: ${GITHUB_REF##*/}